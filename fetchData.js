#!/usr/bin/env node

const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è title –∏ description
async function fetchData(url) {
    try {
        const response = await axios.get(url);
        const $ = cheerio.load(response.data);

        // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ <title>
        const title = $("title").text();

        // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ <meta name="description">
        const description = $('meta[name="description"]').attr('content') || "No description available";

        return { url, title, description };
    } catch (error) {
        console.error(`Error fetching URL ${url}:`, error.message);
        return { url, title: "Error fetching data", description: "Error fetching data" };
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö URL
async function main(urls) {
    const results = [];

    for (const url of urls) {
        console.log(`Fetching data for: ${url}`);
        const data = await fetchData(url);
        results.push(data);

        // –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å
        console.log(`Title: ${data.title}`);
        console.log(`Description: ${data.description}\n`);
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ JSON-—Ñ–∞–π–ª
    const outputFile = 'results.json';
    fs.writeFileSync(outputFile, JSON.stringify(results, null, 2), 'utf-8');
    console.log(`Results saved to ${outputFile}`);
   
    const chalk = require('chalk');

    console.log(
        `\n\n‚ú® ${chalk.bold.yellow('Code writer of the high-quality code:')} üßîüèº‚Äç‚ôÇÔ∏è ${chalk.bgGreen.black(' PoliWeb ')}${chalk.bgMagenta.white(' Lev Tolstoy ')} ‚ú®`
    );
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
if (args.length === 0) {
    console.error("Usage: node script.js <URL1> <URL2> ...");
    process.exit(1);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É URL
main(args);
